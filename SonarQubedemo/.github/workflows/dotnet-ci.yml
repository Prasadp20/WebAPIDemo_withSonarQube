name: ASP.NET Core CI/CD with SonarQube

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣ Checkout source code
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2️⃣ Setup .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    # 3️⃣ Restore dependencies
    - name: Restore dependencies
      run: dotnet restore WebAPIDemo_withSonarQube.sln

    # 4️⃣ Build project
    - name: Build
      run: dotnet build WebAPIDemo_withSonarQube.sln --no-restore --configuration Release

    # 5️⃣ Run tests (optional)
    - name: Run tests
      run: dotnet test WebAPIDemo_withSonarQube.sln --no-build --configuration Release --verbosity normal

    # 6️⃣ Run SonarQube scan
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v2
      with:
        args: >
          -Dsonar.projectKey=MyAspNetCoreAPI
          -Dsonar.organization=my-org
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    # 7️⃣ SonarQube Quality Gate check
    - name: SonarQube Quality Gate
      id: qualitygate
      uses: sonarsource/sonarqube-quality-gate-action@v1
      with:
        sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
        sonar_token: ${{ secrets.SONAR_TOKEN }}


    # 8️⃣ Conditional Deployment (only if Quality Gate passes)
    #- name: Deploy to Azure Web App
    #  if: steps.qualitygate.outputs.status == 'PASSED'
    #  uses: azure/webapps-deploy@v2
    #  with:
    #    app-name: "my-aspnetcore-api"   # Replace with your Azure Web App name
    #    publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
    #    package: ./publish

    ## 9️⃣ Fail pipeline if Quality Gate fails
    #- name: Stop deployment if Quality Gate failed
    #  if: steps.qualitygate.outputs.status != 'PASSED'
    #  run: |
    #    echo "❌ SonarQube Quality Gate failed. Stopping deployment."
    #    exit 1
